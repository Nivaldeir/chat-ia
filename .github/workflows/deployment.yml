name: "Deploy Prod"

on:
  workflow_dispatch:

  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Obtendo o código
        uses: actions/checkout@v4

      - name: Autenticação no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build e Push da Imagem Docker
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: |
            nivaldeir/chat-ia:v2
          build-args: |
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}

  deploy:
    runs-on: [self-hosted]
    name: Continuous Deployment
    needs: [build]
    steps:
      - name: Ler variáveis de ambiente
        run: echo "DATABASE_URL is ${{ secrets.DATABASE_URL }}"

      - name: Deploy Docker stack usando Docker Swarm
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          LINKEDIN_CLIENT_ID: ${{ secrets.LINKEDIN_CLIENT_ID }}
          LINKEDIN_CLIENT_SECRET: ${{ secrets.LINKEDIN_CLIENT_SECRET }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          docker-compose -f docker-compose.build.yml build --no-cache
          docker stack rm taticca-chat-ia
          docker stack deploy -c docker-compose.deploy.yml taticca-chat-ia
